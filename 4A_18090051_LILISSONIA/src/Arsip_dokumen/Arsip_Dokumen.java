package Arsip_dokumen;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lilissonia
 */
public class Arsip_Dokumen extends javax.swing.JPanel {
    DefaultTableModel model;
    
    public Arsip_Dokumen() {
        initComponents();
        
        Object[] header = {"No."," ", "Kode Dokumen", "Nama Dokumen", "Kategori", "Lokasi", "Deskripsi", "Tanggal"};
        model = new DefaultTableModel(header, 0);
        tblDokumen.setModel(model);
        tblDokumen.setRowHeight(30);
        tblDokumen.getColumnModel().getColumn(0).setMinWidth(100);
        tblDokumen.getColumnModel().getColumn(0).setMaxWidth(100);
        tblDokumen.getColumnModel().getColumn(1).setMinWidth(0);
        tblDokumen.getColumnModel().getColumn(1).setMaxWidth(0);
        loadData("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDokumen = new javax.swing.JTable();
        cari = new javax.swing.JTextField();
        btnBatal = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(204, 102, 0));

        tblDokumen.setBackground(new java.awt.Color(0, 0, 0));
        tblDokumen.setForeground(new java.awt.Color(255, 255, 255));
        tblDokumen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDokumen);

        cari.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cariKeyReleased(evt);
            }
        });

        btnBatal.setBackground(new java.awt.Color(0, 0, 0));
        btnBatal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBatal.setForeground(new java.awt.Color(204, 102, 0));
        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cari");

        btnTambah.setBackground(new java.awt.Color(0, 0, 0));
        btnTambah.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(204, 102, 0));
        btnTambah.setText("Tambah Data");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setBackground(new java.awt.Color(0, 0, 0));
        btnUbah.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUbah.setForeground(new java.awt.Color(204, 102, 0));
        btnUbah.setText("Ubah Data");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(0, 0, 0));
        btnHapus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(204, 102, 0));
        btnHapus.setText("Hapus Data");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBatal)
                    .addComponent(btnTambah)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus))
                .addGap(81, 81, 81)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(btnTambah)
                .addGap(18, 18, 18)
                .addComponent(btnUbah)
                .addGap(18, 18, 18)
                .addComponent(btnHapus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBatal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        Arsip_Dokumen d = new Arsip_Dokumen();
        this.setVisible(false);
        d.setVisible(true);
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        Home.addComp(new TambahData());
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        int baris = tblDokumen.getSelectedRow();
        if(baris !=-1){
            int id = Integer.parseInt(tblDokumen.getValueAt(baris, 1).toString());
            String kode = tblDokumen.getValueAt(baris, 2).toString();
            String nama = tblDokumen.getValueAt(baris, 3).toString();
            String kategori = tblDokumen.getValueAt(baris, 4).toString();
            String lok = tblDokumen.getValueAt(baris, 5).toString();
            String des = tblDokumen.getValueAt(baris, 6).toString();
            String tgl = tblDokumen.getValueAt(baris, 7).toString();
            Data d = new Data();
            //int nim2 = Integer.parseInt(nim);
            d.setKode(kode);
            d.setNama(nama);
            d.setKategori(kategori);
            d.setLokasi(lok);
            d.setDeskripsi(des);
            d.setTanggal(tgl);
    
            Home.addComp(new UbahData(d));
            
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int m = tblDokumen.getSelectedRow();
        if(m != -1){
            
            int pilih = JOptionPane.showConfirmDialog(this,
                    "Apakah Anda Yakin Akan Menghapusnya?",
                    "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
            if(pilih == 0){
                try {
                    Connection con = Koneksi.MySQL();
                    Statement s = con.createStatement();
                    Object oid = tblDokumen.getValueAt(m, 1);
                    String strid = oid.toString();
                    int id = Integer.parseInt(strid);
                    String q = "DELETE FROM data_arsip WHERE kode_dokumen="+id+"";
                    s.executeUpdate(q);
                    loadData("");
                    JOptionPane.showMessageDialog(this, "Data Dihapus!");
                } catch (HeadlessException | SQLException e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void cariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cariKeyReleased
        String key = cari.getText();
        if(key.isEmpty()){
            loadData("");
        }else{
             loadData(key);
        }
    }//GEN-LAST:event_cariKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JTextField cari;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDokumen;
    // End of variables declaration//GEN-END:variables

private void loadData(String key) {
    try {
            model.setRowCount(0);
            String where = key.isEmpty()? "": " WHERE nama_dokumen LIKE '%"+key+"%'";
            String q = "SELECT * FROM data_arsip "+where;
            Connection c = Koneksi.MySQL();
            Statement s = c.createStatement();
            ResultSet nm = s.executeQuery(q);
            int no=0;
            while (nm.next()) {    
                int kode = nm.getInt("kode_dokumen");
                String nama = nm.getString("nama_dokumen");
                String kategori = nm.getString("kategori");
                String lok = nm.getString("lokasi");
                String des = nm.getString("deskripsi");
                String tgl = nm.getString("tanggal");
                no++;
                int id = nm.getInt("kode_dokumen");
                Object[] data = {no, id, kode, nama, kategori, lok, des, tgl};
                model.addRow(data);
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }
}
